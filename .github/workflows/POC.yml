on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./

    steps:
      - uses: actions/checkout@v2
      
      # - name: Sonarqube begin  
      #   run: 
      #      D:\sonarScanner\SonarScanner.MSBuild.exe begin /k:"GihubAction" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.opencover.reportsPaths="$GITHUB_WORKSPACE\WebApplication1\opencover.xml"

     
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

 

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

 

      - name: Restore NuGet packages
        run: nuget restore

 

      - name: Publish to folder/build project solution
        run: msbuild WebApplication1.sln /p:Configuration=Release /p:DeployOnBuild=true /p:OutputPath="../_build"

      # - name: Run tests with OpenCover
      #   run: |
      #     D:\opencover\OpenCover.Console.exe -output:"opencover.xml" -register:user -target:"C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" -targetargs:"WebApplication1.Tests\bin\Release\WebApplication1.Tests.dll" -filter:"+[*]* -[*.Tests]*" 

      # - name: Upload Code Coverage Report
      #   uses: actions/upload-artifact@v4.6.0
      #   with:
      #     name: code-coverage
      #     path: $GITHUB_WORKSPACE/WebApplication1/opencover.xml
               
      # - name: Sonarqube End
      #   run: 
      #      D:\sonarScanner\SonarScanner.MSBuild.exe end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ASP-app
          path: _build/**

  deploy:
    name: Deploy to Azure App Service
    runs-on: self-hosted
    needs: build

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4.1.8
        with:
          name: ASP-app
          path: _build

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v2
        with:
          app-name: ActionsDeploy
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: _build
