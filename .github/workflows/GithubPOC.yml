on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  build:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./WebApplication1

    steps:
      - uses: actions/checkout@v2

      # - name: Setup .NET SDK
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 4.6.1
      
      - name: Sonarqube begin
        # env:
        #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        #    shell: powershell
        run: 
           D:\sonarScanner\SonarScanner.MSBuild.exe begin /k:"GihubAction" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ secrets.SONAR_HOST_URL }}" /d:sonar.cs.opencover.reportsPaths="%CD%\opencover.xml"
     
      - name: Setup MSBuild path
        uses: microsoft/setup-msbuild@v1.0.2
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

 

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.0.5
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

 

      - name: Restore NuGet packages
        run: nuget restore

 

      - name: Publish to folder/build project solution
        # run: msbuild /nologo /verbosity:m /t:Build /t:pipelinePreDeployCopyAllFilesToOneFolder /p:_PackageTempDir="\published\"
        run: msbuild /t:Build /p:Configuration=Release WebApplication1.sln

      - name: Run tests with OpenCover
        run: |
          D:\opencover\OpenCover.Console.exe -output:"opencover.xml" -register:user -target:"C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe" -targetargs:"WebApplication1.Tests\bin\Release\WebApplication1.Tests.dll" -filter:"+[*]* -[*.Tests]*" 

      # - name: Generate code coverage report
      #   run: |
      #    & "C:\Users\akashpaw\.dotnet\tools\reportgenerator.exe" -reports:coverage.xml -targetdir:coverage-report -reporttypes:Html

      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage
          path: coverage-report/**
      
      # - name: Run Code Coverage
      #   run: dotnet test /p:CollectCoverage=true /p:CoverletOutputFormat=opencover

      # - name: Publish Code Coverage Results
      #   uses: actions/upload-artifact@v2
      #   with:
      #    name: code-coverage
      #    path: '**/coverage.opencover.xml'

      # - name: Generate Code Coverage Report
      #   run: |
      #    ReportGenerator.exe -reports:**/coverage.opencover.xml -targetdir:coverage-report -reporttypes:Html
      #    mv coverage-report $GITHUB_WORKSPACE/coverage-report

      # - name: Sonarqube build
      #   # env:
      #   #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
      #   #    shell: powershell
      #   run: 
      #      # D:\sonarScanner\SonarScanner.MSBuild.exe build
      #      MSBuild.exe WebApplication1.sln
           

           
      - name: Sonarqube End
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        #   shell: powershell
        run: 
           D:\sonarScanner\SonarScanner.MSBuild.exe end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4.6.0
        with:
          name: ASP-app
          path: '/published/**'
